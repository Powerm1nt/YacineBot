name: Deploy to Production

on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  deploy:
    name: Deploy to Production
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create .env file
        run: |
          echo "${{ secrets.ENV }}" > .env
          echo ".env file created successfully"
          # Display variables without their values for verification (secure)
          grep -o '^[^=]*=' .env | sort

      - name: Install Docker dependencies if needed
        run: |
          if ! command -v docker &> /dev/null || ! command -v docker-compose &> /dev/null; then
            echo "Installing Docker and Docker Compose..."
            sudo apt-get update
            sudo apt-get install -y docker.io docker-compose
            sudo systemctl enable docker
            sudo systemctl start docker
            sudo usermod -aG docker $USER
          else
            echo "Docker and Docker Compose are already installed"
            docker --version
            docker-compose --version
          fi

      - name: Build and start Docker containers
        run: |
          # Stop existing containers if they exist
          docker-compose -f compose.yml down || true

          # Build and start containers in detached mode
          docker-compose -f compose.yml up -d --build

          # Verify containers are running
          docker-compose -f compose.yml ps

      - name: Run database migrations if needed
        run: |
          # Wait for database to be ready
          sleep 5

          # Execute Prisma migrations
          docker-compose -f compose.yml exec -T app yarn prisma:migrate || echo "No migrations to execute"

      - name: Check container logs
        run: |
          echo "=== Application container logs ===" 
          docker-compose -f compose.yml logs --tail=50 app

          echo "\n=== Container status ===" 
          docker-compose -f compose.yml ps

